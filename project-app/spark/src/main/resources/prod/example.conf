# project-app/spark/src/main/resources/$PHASE/all.$CHAIN.conf

spark.app {
    # prod | dev
    phase=
    # baobab | cypress
    chain=
    # Bucket name Ex) "klaytn-prod-spark"
    base.bucket=
    # GCP Project ID Ex) "klaytn-finder"
    gcs.project.id=
    # GCP Region
    gcs.region=

    # Database
    mysql {
        driver = "com.mysql.jdbc.Driver"
        username =
        password =
        urlProperty = "serverTimezone=UTC&rewriteBatchedStatements=true&useSSL=false&allowLoadLocalInfile=true"
        cachePrepStmts = true
        prepStmtCacheSize = 250
        prepStmtCacheSqlLimit = 2048
        minimumIdle = 3
        maximumPoolSize = 8
        connectionTimeout = 10000
        url {
            finder0101 =
            finder0201 =
            finder03 =
            stat =
            finder01r =
            finder0101r =
            finder0201r =
            finder03r =
            statr =
        }
        shardno.finder02 = 1
    }

    # Elasticsearch
    es {
        transaction_v1 {
            url =
            # baobab_transaction_v1 | cypress_transaction_v1
            index_name =
            number_of_shard = 9
            number_of_replica = 1
            template_file_path = "common/es_index/finder/transaction_v1/template.json.j2"
            pipeline_file_path = "common/es_index/finder/transaction_v1/pipeline.json.j2"
        }
        account_v1 {
            url =
            # baobab_account_v1 | cypress_account_v1
            index_name =
            number_of_shard = 3
            number_of_replica = 1
            template_file_path = "common/es_index/finder/account_v1/template.json.j2"
        }
        contract_v1 {
            url =
            # baobab_contract_v1 | cypress_contract_v1
            index_name =
            number_of_shard = 3
            number_of_replica = 1
            template_file_path = "common/es_index/finder/contract_v1/template.json.j2"
        }
    }

    # Kafka
    kafka {
        bootstrap.servers =
        topic.list {
            # baobab.klaytn.chaindatafetcher.en-0.blockgroup.v1 | cypress.klaytn.chaindatafetcher.en-0.blockgroup.v1
            block =
            # baobab.klaytn.chaindatafetcher.en-0.transactiongroup.v1 | cypress.klaytn.chaindatafetcher.en-0.transactiongroup.v1
            internalTransaction =
        }
    }
    # Redis
    redis {
        spark {
            # HOST:PORT
            url =
            timeout = 3000
        }

        finder {
            # HOST:PORT
            url =
            timeout = 3000
        }
    }

    # Caver
    # EN Node rpc url Ex) "http://HOST:8551"
    caver.url =
    caver2.url =
}